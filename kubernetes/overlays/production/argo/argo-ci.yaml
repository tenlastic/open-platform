apiVersion: v1
data:
  externalUiUrl: https://argo.tenlastic.com
kind: ConfigMap
metadata:
  name: argo-ci-settings
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-ci
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-ci
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-ci
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-ci
subjects:
  - kind: ServiceAccount
    name: argo-ci
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-ci
  labels:
    app: argo-ci
spec:
  replicas: 3
  selector:
    matchLabels:
      app: argo-ci
  template:
    metadata:
      labels:
        app: argo-ci
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tenlastic.com/low-priority
                    operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - argo-ci
                topologyKey: kubernetes.io/hostname
      containers:
        - name: argo-ci
          image: argoproj/argoci:v1.0.0-alpha1
          env:
            - name: IN_CLUSTER
              value: "true"
            - name: WORKFLOWS_NAMESPACE
              value: default
            - name: NAMESPACE
              value: default
            - name: ARGO_CI_IMAGE
              value: argoproj/argoci:v1.0.0-alpha1
          ports:
            - containerPort: 8001
            - containerPort: 8002
          resources:
            requests:
              cpu: 50m
      serviceAccountName: argo-ci
---
apiVersion: v1
kind: Service
metadata:
  name: argo-ci
  labels:
    app: argo-ci
    service: argo-ci
spec:
  ports:
    - port: 8001
      name: webhook
    - port: 8002
      name: ui
  selector:
    app: argo-ci
