apiVersion: v1
kind: Service
metadata:
  name: kafka-rest-proxy
  namespace: kafka
  labels:
    app: kafka-rest-proxy
    service: kafka-rest-proxy
spec:
  ports:
    - port: 8082
      name: http
  selector:
    app: kafka-rest-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-rest-proxy
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: kafka-rest-proxy
  template:
    metadata:
      labels:
        app: kafka-rest-proxy
    spec:
      containers:
        - name: kafka-rest-proxy
          image: confluentinc/cp-kafka-rest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082
          env:
            - name: KAFKA_REST_BOOTSTRAP_SERVERS
              value: PLAINTEXT://kafka.kafka.svc.cluster.local:9092
            - name: KAFKA_REST_HOST_NAME
              value: http://0.0.0.0:8082
            - name: KAFKA_REST_LISTENERS
              value: http://0.0.0.0:8082
            - name: KAFKA_REST_ZOOKEEPER_CONNECT
              value: kafka-zookeeper.kafka.svc.cluster.local:2181
            - name: KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS
              value: "30000"
            - name: KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS
              value: "GET,POST,PUT,DELETE,OPTIONS"
            - name: KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN
              value: "*"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: Exists
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kafka-rest-proxy
  namespace: kafka
spec:
  hosts:
    - kafka-proxy.tenlastic.com
  gateways:
    - istio-system/istio-autogenerated-k8s-ingress
  http:
    - route:
        - destination:
            host: kafka-rest-proxy
            port:
              number: 8082
