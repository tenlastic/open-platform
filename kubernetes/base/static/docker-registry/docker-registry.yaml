apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: docker-registry
    release: docker-registry
  name: docker-registry-config
  namespace: static
data:
  config.yml: |-
    auth:
      htpasswd:
        realm: Registry Realm
        path: /auth/htpasswd
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
      relativeurls: true
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      delete:
        enabled: true
    version: 0.1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-registry
    release: docker-registry
  name: docker-registry
  namespace: static
spec:
  minReadySeconds: 5
  replicas: 3
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tenlastic.com/high-priority
                    operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - docker-registry
                topologyKey: kubernetes.io/hostname
      containers:
        - name: docker-registry
          image: registry:2.7.1
          command:
            - /bin/registry
            - serve
            - /etc/docker/registry/config.yml
          env:
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: docker-registry
                  key: haSharedSecret
            - name: REGISTRY_STORAGE_S3_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: docker-registry
                  key: s3AccessKey
            - name: REGISTRY_STORAGE_S3_BUCKET
              value: docker-registry
            - name: REGISTRY_STORAGE_S3_REGION
              value: us-east-1
            - name: REGISTRY_STORAGE_S3_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: docker-registry
                  key: s3SecretKey
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          ports:
            - containerPort: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources:
            requests:
              cpu: 50m
          volumeMounts:
            - name: auth
              mountPath: /auth
              readOnly: true
            - name: docker-registry-config
              mountPath: /etc/docker/registry/
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      volumes:
        - name: auth
          secret:
            secretName: docker-registry
            items:
              - key: htpasswd
                path: htpasswd
        - name: docker-registry-config
          configMap:
            name: docker-registry-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-registry
    release: docker-registry
  name: docker-registry
  namespace: static
spec:
  type: ClusterIP
  ports:
    - name: registry
      port: 5000
      protocol: TCP
  selector:
    app: docker-registry
