apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: api
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - namespaces
      - persistentvolumeclaims
      - pods
      - pods/exec
      - pods/log
      - pods/status
      - secrets
      - services
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - helm.fluxcd.io
    resources:
      - helmreleases
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - networkpolicies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - clusterroles
      - rolebindings
      - roles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: api-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: api
subjects:
  - kind: ServiceAccount
    name: api
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tenlastic.com/low-priority
                    operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - api
                topologyKey: kubernetes.io/hostname
      containers:
        - name: api
          image: tenlastic/api:0.0.173
          envFrom:
            - secretRef:
                name: nodejs-environment-variables
          livenessProbe:
            httpGet:
              path: /articles
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 50m
      serviceAccountName: api
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
    service: api
spec:
  ports:
    - port: 3000
      name: http
  selector:
    app: api
