apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: api-role
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: api-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-role
subjects:
  - kind: ServiceAccount
    name: api
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 5
  template:
    metadata:
      labels:
        app: api
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: Exists
      containers:
        - name: api
          image: tenlastic/api:0.0.81
          envFrom:
            - secretRef:
                name: nodejs-environment-variables
          livenessProbe:
            httpGet:
              path: /articles
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
          ports:
            - containerPort: 3000
        - name: dind
          image: docker:19.03.8-dind
          command:
            - "dockerd"
            - "--host"
            - "tcp://0.0.0.0:2375"
          securityContext:
            privileged: true
          volumeMounts:
            - name: dind
              mountPath: /var/lib/docker
      serviceAccountName: api
      volumes:
        - name: dind
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
    service: api
spec:
  ports:
    - port: 3000
      name: http
  selector:
    app: api
