apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  labels:
    app: docker-registry
spec:
  selector:
    matchLabels:
      app: docker-registry
  replicas: 3
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: docker-registry
          image: "registry:2.7.1"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/registry
            - serve
            - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources: {}
          env:
            - name: REGISTRY_AUTH
              value: "htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: "/auth/htpasswd"
            - name: REGISTRY_HTTP_HOST
              value: "https://registry.tenlastic.com"
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: docker-registry-secret
                  key: haSharedSecret
            - name: REGISTRY_STORAGE_S3_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: docker-registry-secret
                  key: s3AccessKey
            - name: REGISTRY_STORAGE_S3_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: docker-registry-secret
                  key: s3SecretKey
            - name: REGISTRY_STORAGE_S3_REGION
              value: us-east-1
            - name: REGISTRY_STORAGE_S3_REGIONENDPOINT
              value: minio.tenlastic.com
            - name: REGISTRY_STORAGE_S3_BUCKET
              value: docker-registry
          volumeMounts:
            - name: auth
              mountPath: /auth
              readOnly: true
            - name: "docker-registry-config"
              mountPath: "/etc/docker/registry"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tenlastic.com/high-priority
                    operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - docker-registry
              topologyKey: kubernetes.io/hostname
      volumes:
        - name: auth
          secret:
            secretName: docker-registry-secret
            items:
              - key: htpasswd
                path: htpasswd
        - name: docker-registry-config
          configMap:
            name: docker-registry-config
