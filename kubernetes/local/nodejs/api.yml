apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: api-role
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: api-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-role
subjects:
  - kind: ServiceAccount
    name: api
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: node:10
          command: ["npm", "run", "start"]
          envFrom:
            - secretRef:
                name: nodejs-environment-variables
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: app
              mountPath: /usr/src/app/
          workingDir: /usr/src/app/projects/javascript/nodejs/applications/api/
      volumes:
        - name: app
          hostPath:
            path: /c/open-platform/
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
    service: api
spec:
  ports:
    - port: 3000
      name: http
  selector:
    app: api
