import {
  Article,
  Authorization,
  Build,
  Collection,
  Friend,
  GameServer,
  GroupInvitation,
  Group,
  Ignoration,
  Login,
  Message,
  Namespace,
  OnArticleConsumed,
  OnAuthorizationConsumed,
  OnBuildConsumed,
  OnCollectionConsumed,
  OnFriendConsumed,
  OnGameServerConsumed,
  OnGroupInvitationConsumed,
  OnGroupConsumed,
  OnIgnorationConsumed,
  OnLoginConsumed,
  OnMessageConsumed,
  OnNamespaceConsumed,
  OnPasswordResetConsumed,
  OnQueueMemberConsumed,
  OnQueueConsumed,
  OnStorefrontConsumed,
  OnUserConsumed,
  OnWebSocketConsumed,
  OnWorkflowConsumed,
  PasswordReset,
  QueueMember,
  Queue,
  Storefront,
  User,
  WebSocket,
  Workflow,
} from '@tenlastic/mongoose-models';

import { subscribe } from './subscribe';

export function consume(durable: string) {
  return Promise.all([
    subscribe(durable, OnArticleConsumed, Article),
    subscribe(durable, OnAuthorizationConsumed, Authorization),
    subscribe(durable, OnBuildConsumed, Build),
    subscribe(durable, OnCollectionConsumed, Collection),
    subscribe(durable, OnFriendConsumed, Friend),
    subscribe(durable, OnGameServerConsumed, GameServer),
    subscribe(durable, OnGroupInvitationConsumed, GroupInvitation),
    subscribe(durable, OnGroupConsumed, Group),
    subscribe(durable, OnIgnorationConsumed, Ignoration),
    subscribe(durable, OnLoginConsumed, Login),
    subscribe(durable, OnMessageConsumed, Message),
    subscribe(durable, OnNamespaceConsumed, Namespace),
    subscribe(durable, OnPasswordResetConsumed, PasswordReset),
    subscribe(durable, OnQueueMemberConsumed, QueueMember),
    subscribe(durable, OnQueueConsumed, Queue),
    subscribe(durable, OnStorefrontConsumed, Storefront),
    subscribe(durable, OnUserConsumed, User),
    subscribe(durable, OnWebSocketConsumed, WebSocket),
    subscribe(durable, OnWorkflowConsumed, Workflow),
  ]);
}
