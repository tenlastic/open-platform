import {
  Article,
  Authorization,
  Build,
  Collection,
  Friend,
  GameServer,
  GroupInvitation,
  Group,
  Ignoration,
  Login,
  Message,
  Namespace,
  ArticleEvent,
  AuthorizationEvent,
  BuildEvent,
  CollectionEvent,
  FriendEvent,
  GameServerEvent,
  GroupInvitationEvent,
  GroupEvent,
  IgnorationEvent,
  LoginEvent,
  MessageEvent,
  NamespaceEvent,
  PasswordResetEvent,
  QueueMemberEvent,
  QueueEvent,
  StorefrontEvent,
  UserEvent,
  WebSocketEvent,
  WorkflowEvent,
  PasswordReset,
  QueueMember,
  Queue,
  Storefront,
  User,
  WebSocket,
  Workflow,
} from '@tenlastic/mongoose-models';

import { subscribe } from './subscribe';

export function consume(durable: string) {
  return Promise.all([
    subscribe(durable, ArticleEvent, Article),
    subscribe(durable, AuthorizationEvent, Authorization),
    subscribe(durable, BuildEvent, Build),
    subscribe(durable, CollectionEvent, Collection),
    subscribe(durable, FriendEvent, Friend),
    subscribe(durable, GameServerEvent, GameServer),
    subscribe(durable, GroupInvitationEvent, GroupInvitation),
    subscribe(durable, GroupEvent, Group),
    subscribe(durable, IgnorationEvent, Ignoration),
    subscribe(durable, LoginEvent, Login),
    subscribe(durable, MessageEvent, Message),
    subscribe(durable, NamespaceEvent, Namespace),
    subscribe(durable, PasswordResetEvent, PasswordReset),
    subscribe(durable, QueueMemberEvent, QueueMember),
    subscribe(durable, QueueEvent, Queue),
    subscribe(durable, StorefrontEvent, Storefront),
    subscribe(durable, UserEvent, User),
    subscribe(durable, WebSocketEvent, WebSocket),
    subscribe(durable, WorkflowEvent, Workflow),
  ]);
}
