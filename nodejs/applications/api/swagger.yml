components:
  securitySchemes:
    AccessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
info:
  version: 1.0.0
  title: 'Tenlastic API Documentation'
  description: |
    ## Using the API

    ### API Key Authentication
    Many API endpoints regarding Namespace resources accept token-based authentication. 
    Provide the API Key in the 'X-Api-Key' header.

    ### User Authentication
    Many API endpoints accept JWT-based authentication. To authenticate to the API,
    provide the user's access token in the 'Authorization' header with the following
    format:
    ```
    Bearer [token]
    ```
    If an invalid token is given, you will receive a 401 (Unauthorized) HTTP status
    with a JSON response containing an error message.

    ### Errors
    All errors will return a 400 (Bad Request) HTTP status and a JSON response
    containing the error messages. An example error response would be:
    ```json
    {"errors":[{"message":"Missing required query parameters: name.","name":"RequiredFieldError"}]}
    ```

    ### GET Parameters
    GET parameters must be valid JSON accessible within the "query" parameter.

    For example, if you are trying to supply the following parameters:
    ```json
    {"limit":20,"skip":20,"where":{"email":"test@example"}}
    ```
    This string should be URI encoded so special characters are able to be
    included in a URL:
    ```
    %7B%22limit%22%3A20%2C%22skip%22%3A20%2C%22where%22%3A%7B%22email%22%3A%22test%40example%22%7D%7D
    ```
    This query should then be appended to the "query" parameter in the URL's GET
    parameters:
    ```
    http://www.example.com/v1/users?query=%7B%22limit%22%3A20%2C%22skip%22%3A20%2C%22where%22%3A%7B%22email%22%3A%22test%40example%22%7D%7D
    ```
openapi: '3.0.0'
paths: {}
servers:
  - description: Production
    url: https://api.tenlastic.com
  - description: Development
    url: http://api.local.tenlastic.com
