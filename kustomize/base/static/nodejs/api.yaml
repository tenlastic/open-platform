apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: api
rules:
  - apiGroups:
      - scheduling.k8s.io
    resources:
      - priorityclasses
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: api
subjects:
  - kind: ServiceAccount
    name: api
    namespace: static
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: api
  namespace: static
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: api
  namespace: static
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api
subjects:
  - kind: ServiceAccount
    name: api
    namespace: static
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api
  namespace: static
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: api
  name: api
  namespace: static
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tenlastic.com/low-priority
                    operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - api
              topologyKey: kubernetes.io/hostname
      containers:
        - name: api
          image: tenlastic/api:0.0.398
          envFrom:
            - secretRef:
                name: nodejs
          livenessProbe:
            httpGet:
              path: /probes/liveness
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: 100m
              memory: 250M
            requests:
              cpu: 25m
              memory: 250M
      serviceAccountName: api
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: api
  name: api
  namespace: static
spec:
  ports:
    - name: http
      port: 3000
  selector:
    app.kubernetes.io/name: api
